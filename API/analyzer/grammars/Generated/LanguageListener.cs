//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LanguageParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ILanguageListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.programa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrograma([NotNull] LanguageParser.ProgramaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.programa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrograma([NotNull] LanguageParser.ProgramaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.funcionMain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionMain([NotNull] LanguageParser.FuncionMainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.funcionMain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionMain([NotNull] LanguageParser.FuncionMainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.bloque"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBloque([NotNull] LanguageParser.BloqueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.bloque"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBloque([NotNull] LanguageParser.BloqueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SentenciaAsignacion</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSentenciaAsignacion([NotNull] LanguageParser.SentenciaAsignacionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SentenciaAsignacion</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSentenciaAsignacion([NotNull] LanguageParser.SentenciaAsignacionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SentenciaImprimir</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSentenciaImprimir([NotNull] LanguageParser.SentenciaImprimirContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SentenciaImprimir</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSentenciaImprimir([NotNull] LanguageParser.SentenciaImprimirContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SentenciaExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSentenciaExpresion([NotNull] LanguageParser.SentenciaExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SentenciaExpresion</c>
	/// labeled alternative in <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSentenciaExpresion([NotNull] LanguageParser.SentenciaExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Asignar</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignar([NotNull] LanguageParser.AsignarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Asignar</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignar([NotNull] LanguageParser.AsignarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Imprime</c>
	/// labeled alternative in <see cref="LanguageParser.imprimir"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImprime([NotNull] LanguageParser.ImprimeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Imprime</c>
	/// labeled alternative in <see cref="LanguageParser.imprimir"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImprime([NotNull] LanguageParser.ImprimeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparacionDiferente</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparacionDiferente([NotNull] LanguageParser.ComparacionDiferenteContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparacionDiferente</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparacionDiferente([NotNull] LanguageParser.ComparacionDiferenteContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparacionIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparacionIgual([NotNull] LanguageParser.ComparacionIgualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparacionIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparacionIgual([NotNull] LanguageParser.ComparacionIgualContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralCadena</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralCadena([NotNull] LanguageParser.LiteralCadenaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralCadena</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralCadena([NotNull] LanguageParser.LiteralCadenaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Parentesis</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentesis([NotNull] LanguageParser.ParentesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parentesis</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentesis([NotNull] LanguageParser.ParentesisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModulo([NotNull] LanguageParser.ModuloContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModulo([NotNull] LanguageParser.ModuloContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralEntero</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralEntero([NotNull] LanguageParser.LiteralEnteroContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralEntero</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralEntero([NotNull] LanguageParser.LiteralEnteroContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralRune</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralRune([NotNull] LanguageParser.LiteralRuneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralRune</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralRune([NotNull] LanguageParser.LiteralRuneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Multiplicacion</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicacion([NotNull] LanguageParser.MultiplicacionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Multiplicacion</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicacion([NotNull] LanguageParser.MultiplicacionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralVerdadero</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralVerdadero([NotNull] LanguageParser.LiteralVerdaderoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralVerdadero</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralVerdadero([NotNull] LanguageParser.LiteralVerdaderoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralFlotante</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralFlotante([NotNull] LanguageParser.LiteralFlotanteContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralFlotante</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralFlotante([NotNull] LanguageParser.LiteralFlotanteContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Suma</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuma([NotNull] LanguageParser.SumaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Suma</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuma([NotNull] LanguageParser.SumaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MenorOIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenorOIgual([NotNull] LanguageParser.MenorOIgualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MenorOIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenorOIgual([NotNull] LanguageParser.MenorOIgualContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralNulo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralNulo([NotNull] LanguageParser.LiteralNuloContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralNulo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralNulo([NotNull] LanguageParser.LiteralNuloContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MayorOIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMayorOIgual([NotNull] LanguageParser.MayorOIgualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MayorOIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMayorOIgual([NotNull] LanguageParser.MayorOIgualContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralFalso</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralFalso([NotNull] LanguageParser.LiteralFalsoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralFalso</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralFalso([NotNull] LanguageParser.LiteralFalsoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivision([NotNull] LanguageParser.DivisionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivision([NotNull] LanguageParser.DivisionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MayorQue</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMayorQue([NotNull] LanguageParser.MayorQueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MayorQue</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMayorQue([NotNull] LanguageParser.MayorQueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Identificador</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentificador([NotNull] LanguageParser.IdentificadorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Identificador</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentificador([NotNull] LanguageParser.IdentificadorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Resta</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResta([NotNull] LanguageParser.RestaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Resta</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResta([NotNull] LanguageParser.RestaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MenorQue</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenorQue([NotNull] LanguageParser.MenorQueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MenorQue</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenorQue([NotNull] LanguageParser.MenorQueContext context);
}
